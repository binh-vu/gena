name: ci

on:
  push:
  pull_request:

jobs:
  backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: setup python
        uses: actions/setup-python@v3
        with:
          python-version: 3.8
      - name: install dependencies
        run: |
          pip install poetry
          # poetry install
      - name: build
        run: poetry build
      - name: upload backend dist
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: setup nodejs
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          registry-url: "https://registry.npmjs.org"
          always-auth: true
      - name: install dependencies
        working-directory: ./www
        run: yarn install
      - name: build
        working-directory: ./www
        run: yarn build
      - name: upload frontend dist
        uses: actions/upload-artifact@v3
        with:
          name: www
          path: www/lib

  release:
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/') || startsWith(github.ref, 'refs/heads/main') || startsWith(github.ref, 'refs/heads/dev-ci')"
    needs: [backend, frontend]
    steps:
      - uses: actions/checkout@v3
      - name: setup nodejs
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          registry-url: "https://registry.npmjs.org"
          always-auth: true
      - uses: actions/download-artifact@v3
        with:
          name: wheels
          path: dist
      - uses: actions/download-artifact@v3
        with:
          name: www
          path: www/lib
      - name: pypi publish
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
          skip_existing: true
          print_hash: true
      - name: npm publish
        working-directory: ./www
        run: >
          if [ "$(npm view $(node -p 'require('"'"'./package.json'"'"').name') version)" = "$(node -p 'require('"'"'./package.json'"'"').version')" ]; then 
            yarn publish;
          else 
            echo "skipping publishing because it appears to already exist"; 
            echo "Version on registry: $(npm view $(node -p 'require('"'"'./package.json'"'"').name') version)";
            echo "Local version: $(node -p 'require('"'"'./package.json'"'"').version')"
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
