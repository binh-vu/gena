{"version":3,"sources":["../.yalc/gena-app/lib/esm/models/RStore.js","../.yalc/gena-app/lib/esm/models/CRUDStore.js","../.yalc/gena-app/lib/esm/components/LoadingComponent.js","../.yalc/gena-app/lib/esm/env.js","../.yalc/gena-app/lib/esm/routing/route.js","../.yalc/gena-app/lib/esm/routing/index.js","../.yalc/gena-app/lib/esm/components/NotFoundComponent.js","../.yalc/gena-app/lib/esm/App.js","models/index.ts","models/TodoListStore.ts","reportWebVitals.ts","pages/HomePage.tsx","components/NavBar.tsx","routes.tsx","index.tsx"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","StoreState","this","_value","forbiddenStates","Set","makeObservable","observable","computed","v","has","RStore","remoteURL","field2name","refetch","indices","state","records","Map","fetch","flow","query","record","set","id","index","f","map","get","queryByName","name","axios","params","q","resp","data","deserialize","bind","total","nameAndField","Object","entries","key","name2field","fromEntries","undefined","batch","BatchFetchRequests","action","fetchOne","fetchById","fetchByIds","list","limit","length","runInAction","response","status","ids","sendoutIds","filter","output","post","values","items","item","offset","unique","fields","field","join","conditions","op_or_val","op","Array","isArray","sortedBy","sorted_by","order","groupBy","group_by","m","from","iter","fn","r","push","groupedFields","add","condition","btoa","JSON","stringify","encodedCondition","parse","atob","store","window","requests","executingRequests","callback","clearTimeout","setTimeout","promise","exec","catch","pendingPromises","all","x","reqs","req","delete","CRUDStore","createDrafts","updateDrafts","createAJAXParams","URL","config","onDeleteListeners","create","update","truncate","setCreateDraft","deleteCreateDraft","setUpdateDraft","deleteUpdateDraft","listener","draft","discardDraft","serializeCreateDraft","draftID","put","serializeUpdateDraft","toModel","markSaved","prevRecord","deindex","clear","remove","serializeRecord","val","k","hasOwnProperty","SimpleCRUDStore","override","_super","call","assign","makeStyles","container","paddingTop","paddingBottom","textAlign","spin","animation","display","fontSize","color","lineHeight","verticalAlign","width","height","textTransform","text","textShadow","PLATFORM","process","REACT_APP_PLATFORM","REACT_APP_API_SERVER","history","createMemoryHistory","createBrowserHistory","PathDef","urlSchema","querySchema","component","pathDef","exact","strict","routeDef","path","urlArgs","queryArgs","replace","URLSearchParams","toString","pathname","search","hash","Path","location","useLocation","useMemo","getURLArgs","getQueryArgs","url","useURLParams","useQueryParams","matchPath","every","object","schema","prop","propType","parseFloat","Number","isFinite","NoArgsPathDef","mouseClickNavigationHandler","openInNewPage","preventDefault","ctrlKey","metaKey","open","getURL","focus","routeAPIs","internalHTMLLinkClickFnId","internalHTMLLinkClick","href","target","getAttribute","goBack","goForward","openInternalLink","_routeAPIs","getActiveRouteName","routes","route","useStyles","fontFamily","title","subTitle","navigation","marginTop","marginLeft","btn","borderColor","background","boxShadow","fontWeight","border","transition","userSelect","touchAction","padding","borderRadius","cursor","onClickGoHome","NotFoundComponent","classes","_jsxs","className","children","_jsx","onClick","App","Router","Switch","Route","stores","todolistStore","StoreContext","React","createContext","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","HomePage","observer","useContext","useEffect","Item","checked","onChange","Paragraph","style","marginBottom","editable","todo","type","danger","direction","bordered","centerNavBar","justifyContent","leftNavBar","borderBottom","paddingLeft","paddingRight","CenterNavBar","menus","isFirstItemLogo","keys","routeName","getMenuItem","activeRouteName","mode","selectedKeys","props","realprops","isValidElement","home","applyFn","ignoredRoutes","applyLayout","element","createElement","ReactDOM","render","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.4871f397.chunk.js","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport axios from \"axios\";\nimport { action, computed, flow, makeObservable, observable, runInAction, } from \"mobx\";\nexport class StoreState {\n    constructor() {\n        this._value = \"updated\";\n        this.forbiddenStates = new Set();\n        makeObservable(this, {\n            _value: observable,\n            value: computed,\n        });\n    }\n    get value() {\n        return this._value;\n    }\n    set value(v) {\n        if (this.forbiddenStates.has(v)) {\n            return;\n        }\n        this._value = v;\n    }\n}\nexport class RStore {\n    /**\n     * Constructor\n     *\n     * @param remoteURL RESTful endpoint for this store\n     * @param field2name mapping from Record's field to the corresponding field name in the RESTful API\n     * @param refetch whether to refetch the entity if it is already in the store\n     * @param indices list of indices to create\n     */\n    constructor(remoteURL, field2name, refetch, indices) {\n        this.state = new StoreState();\n        // null represent that entity does not exist on the server\n        this.records = new Map();\n        // whether to reload the entity if the store already has an entity\n        this.refetch = true;\n        // storing index, has to make it public to make it observable, but you should treat it as protected\n        this.indices = [];\n        /**\n         * Fetch mutliple records from remote server\n         */\n        this.fetch = flow(function* (query) {\n            try {\n                this.state.value = \"updating\";\n                const result = yield this.query(query);\n                for (const record of result.records) {\n                    this.records.set(record.id, record);\n                    this.index(record);\n                }\n                this.state.value = \"updated\";\n                result.records = result.records.map((record) => this.records.get(record.id));\n                return result;\n            }\n            catch (error) {\n                this.state.value = \"error\";\n                throw error;\n            }\n        });\n        /**\n         * Query records by name (not store the result)\n         */\n        this.queryByName = (name) => __awaiter(this, void 0, void 0, function* () {\n            let resp;\n            try {\n                resp = yield axios.get(`${this.remoteURL}`, {\n                    params: {\n                        q: name,\n                    },\n                });\n            }\n            catch (error) {\n                throw error;\n            }\n            return {\n                records: resp.data.map(this.deserialize.bind(this)),\n                total: resp.data.total,\n            };\n        });\n        this.remoteURL = remoteURL;\n        this.field2name = field2name || {};\n        this.nameAndField = Object.entries(this.field2name).map(([key, value]) => [value, key]);\n        this.name2field = Object.fromEntries(this.nameAndField);\n        if (refetch !== undefined) {\n            this.refetch = refetch;\n        }\n        this.indices = indices || [];\n        this.batch = new BatchFetchRequests(this, 50);\n        makeObservable(this, {\n            state: observable,\n            records: observable,\n            indices: observable,\n            fetch: action,\n            fetchOne: action,\n            fetchById: action,\n            fetchByIds: action,\n            set: action,\n            list: computed,\n        });\n    }\n    /**\n     * Get the number of records in the table\n     */\n    remoteSize() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.query({ limit: 1 })).total;\n        });\n    }\n    /** Fetch one record from the remote server */\n    fetchOne(query) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                this.state.value = \"updating\";\n                query.limit = 1;\n                const result = yield this.query(query);\n                if (result.records.length === 0) {\n                    // entity does not exist\n                    runInAction(() => {\n                        this.state.value = \"updated\";\n                    });\n                    return undefined;\n                }\n                let record = result.records[0];\n                return runInAction(() => {\n                    this.records.set(record.id, record);\n                    this.index(record);\n                    this.state.value = \"updated\";\n                    return this.records.get(record.id);\n                });\n            }\n            catch (error) {\n                if (error.response && error.response.status === 404) {\n                    // entity does not exist\n                    runInAction(() => {\n                        this.state.value = \"updated\";\n                    });\n                    return undefined;\n                }\n                runInAction(() => {\n                    this.state.value = \"error\";\n                });\n                throw error;\n            }\n        });\n    }\n    /**\n     * Fetch a record from remote server.\n     *\n     * Use async instead of flow as we may want to override the function and call super.\n     *\n     * @returns the record if it exists, undefined otherwise\n     */\n    fetchById(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.refetch && this.has(id)) {\n                const record = this.records.get(id);\n                if (record === null)\n                    return Promise.resolve(undefined);\n                return Promise.resolve(record);\n            }\n            try {\n                this.state.value = \"updating\";\n                let resp = yield axios.get(`${this.remoteURL}/${id}`);\n                return runInAction(() => {\n                    let record = this.deserialize(resp.data);\n                    this.records.set(record.id, record);\n                    this.index(record);\n                    this.state.value = \"updated\";\n                    return this.records.get(record.id);\n                });\n            }\n            catch (error) {\n                if (error.response && error.response.status === 404) {\n                    // entity does not exist\n                    runInAction(() => {\n                        this.records.set(id, null);\n                        this.state.value = \"updated\";\n                    });\n                    return undefined;\n                }\n                runInAction(() => {\n                    this.state.value = \"error\";\n                });\n                throw error;\n            }\n        });\n    }\n    /**\n     * Fetch multiple records from remote server by their IDs.\n     *\n     * Use async instead of flow as we may want to override the function and call super.\n     *\n     * @returns an object containing record that we found (the one we didn't found is undefined)\n     */\n    fetchByIds(ids) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let sendoutIds = ids;\n            if (!this.refetch) {\n                // no refetch, then we need to filter the list of ids\n                sendoutIds = sendoutIds.filter((id) => !this.has(id));\n                if (sendoutIds.length === 0) {\n                    const output = {};\n                    for (const id of ids) {\n                        const record = this.records.get(id);\n                        if (record !== null && record !== undefined) {\n                            output[id] = record;\n                        }\n                    }\n                    return Promise.resolve(output);\n                }\n            }\n            try {\n                this.state.value = \"updating\";\n                let resp = yield axios.post(`${this.remoteURL}/find_by_ids`, {\n                    ids: sendoutIds,\n                });\n                return runInAction(() => {\n                    for (const item of Object.values(resp.data.items)) {\n                        const record = this.deserialize(item);\n                        this.records.set(record.id, record);\n                        this.index(record);\n                    }\n                    const output = {};\n                    for (const id of ids) {\n                        const record = this.records.get(id);\n                        if (record === undefined) {\n                            this.records.set(id, null);\n                        }\n                        else if (record !== null) {\n                            output[id] = record;\n                        }\n                    }\n                    this.state.value = \"updated\";\n                    return output;\n                });\n            }\n            catch (error) {\n                runInAction(() => {\n                    this.state.value = \"error\";\n                });\n                throw error;\n            }\n        });\n    }\n    /** Query records (not store the result) */\n    query(query) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let params = {\n                limit: query.limit,\n                offset: query.offset,\n                unique: query.unique,\n            };\n            if (query.fields !== undefined) {\n                params.fields = query.fields\n                    .map((field) => this.field2name[field] || field)\n                    .join(\",\");\n            }\n            if (query.conditions !== undefined) {\n                for (let [field, op_or_val] of Object.entries(query.conditions)) {\n                    field = this.field2name[field] || field;\n                    if (typeof op_or_val === \"object\") {\n                        if (op_or_val.op === \"max\") {\n                            params[`${field}[${op_or_val.op}]`] = op_or_val.value.join(\",\");\n                        }\n                        else {\n                            params[`${field}[${op_or_val.op}]`] = Array.isArray(op_or_val.value)\n                                ? op_or_val.value.join(\",\")\n                                : op_or_val.value;\n                        }\n                    }\n                    else {\n                        params[`${field}`] = op_or_val;\n                    }\n                }\n            }\n            if (Array.isArray(query.sortedBy)) {\n                params.sorted_by = query.sortedBy\n                    .map((item) => {\n                    const field = this.field2name[item.field] || item.field;\n                    return item.order === \"asc\" ? field : `-${field}`;\n                })\n                    .join(\",\");\n            }\n            else if (typeof query.sortedBy === \"object\") {\n                const field = this.field2name[query.sortedBy.field] || query.sortedBy.field;\n                params.sorted_by = query.sortedBy.order === \"asc\" ? field : `-${field}`;\n            }\n            else {\n                params.sorted_by = this.field2name[query.sortedBy] || query.sortedBy;\n            }\n            if (query.groupBy !== undefined) {\n                params.group_by = query.groupBy\n                    .map((field) => this.field2name[field] || field)\n                    .join(\",\");\n            }\n            let resp;\n            try {\n                resp = yield axios.get(`${this.remoteURL}`, { params });\n            }\n            catch (error) {\n                throw error;\n            }\n            return {\n                records: resp.data.items.map(this.deserialize.bind(this)),\n                total: resp.data.total,\n            };\n        });\n    }\n    /**\n     * Test if we store a local copy of a record (INCLUDING NULL -- the record does not exist)\n     */\n    has(id) {\n        return this.records.has(id);\n    }\n    /**\n     * Get a local copy of a record\n     */\n    get(id) {\n        return this.records.get(id);\n    }\n    /**\n     * Save a record to the store\n     *\n     * @param m the record\n     */\n    set(m) {\n        this.records.set(m.id, m);\n        this.index(m);\n    }\n    /**\n     * Iter through list of local copy of records in the store\n     */\n    *iter() {\n        for (const m of this.records.values()) {\n            if (m !== null) {\n                yield m;\n            }\n        }\n    }\n    /**\n     * Get a list of local copy of records in the store\n     */\n    get list() {\n        return Array.from(this.iter());\n    }\n    /**\n     * Filter records according to the filter function\n     */\n    filter(fn) {\n        let output = [];\n        for (const r of this.records.values()) {\n            if (r !== null && fn(r)) {\n                output.push(r);\n            }\n        }\n        return output;\n    }\n    /**\n     * Group records by values of some fields\n     */\n    groupBy(groupedFields, records) {\n        let output = {};\n        for (const r of records) {\n            const key = groupedFields.map((field) => r[field]).join(\"$\");\n            if (output[key] === undefined) {\n                output[key] = [r];\n            }\n            else {\n                output[key].push(r);\n            }\n        }\n        return Object.values(output);\n    }\n    /**\n     * Deserialize the data sent from the server to a record.\n     */\n    deserialize(record) {\n        if (this.nameAndField.length > 0) {\n            for (const [name, field] of this.nameAndField) {\n                record[field] = record[name];\n                delete record[name];\n            }\n        }\n        return record;\n    }\n    /**\n     * Add a record to your indexes. Its implementation must be IDEMPOTENT\n     */\n    index(record) {\n        for (const index of this.indices) {\n            index.add(record);\n        }\n    }\n    /** Encode a query condition so its can be shared through URL */\n    encodeWhereQuery(condition) {\n        return btoa(JSON.stringify(condition));\n    }\n    /** Decode a query back to its original form */\n    decodeWhereQuery(encodedCondition) {\n        return JSON.parse(atob(encodedCondition));\n    }\n}\nclass BatchFetchRequests {\n    constructor(store, window) {\n        this.store = store;\n        this.window = window;\n        this.requests = new Set();\n        this.executingRequests = new Map();\n    }\n    fetchById(id) {\n        this.requests.add(id);\n        if (this.callback !== undefined) {\n            clearTimeout(this.callback);\n        }\n        return new Promise((resolve, reject) => {\n            this.callback = setTimeout(() => {\n                const promise = this.exec();\n                promise.catch(reject);\n                promise.then(() => {\n                    // in case it's still pending from previous requests\n                    const m = this.executingRequests.get(id);\n                    if (m !== undefined) {\n                        // don't remove executingRequests as it will be removed automatically when the promise resolves\n                        m.then(() => {\n                            const r = this.store.records.get(id);\n                            resolve(r === null ? undefined : r);\n                        });\n                    }\n                    else {\n                        const r = this.store.records.get(id);\n                        resolve(r === null ? undefined : r);\n                    }\n                });\n            }, this.window);\n        });\n    }\n    fetchByIds(ids) {\n        for (const id of ids)\n            this.requests.add(id);\n        if (this.callback !== undefined) {\n            clearTimeout(this.callback);\n        }\n        return new Promise((resolve, reject) => {\n            this.callback = setTimeout(() => {\n                const promise = this.exec();\n                promise.catch(reject);\n                promise.then(() => {\n                    const output = {};\n                    const pendingPromises = [];\n                    for (const id of ids) {\n                        const m = this.executingRequests.get(id);\n                        if (m !== undefined) {\n                            // don't remove executingRequests as it will be removed automatically when the promise resolves\n                            pendingPromises.push([m, id]);\n                        }\n                        else {\n                            const record = this.store.records.get(id);\n                            if (record !== null && record !== undefined) {\n                                output[id] = record;\n                            }\n                        }\n                    }\n                    if (pendingPromises.length > 0) {\n                        // waiting for pending requests to finish\n                        Promise.all(pendingPromises.map((x) => x[0])).then(() => {\n                            for (const m_n_id of pendingPromises) {\n                                const id = m_n_id[1];\n                                const record = this.store.records.get(id);\n                                if (record !== null && record !== undefined) {\n                                    output[id] = record;\n                                }\n                            }\n                            resolve(output);\n                        });\n                    }\n                    else {\n                        resolve(output);\n                    }\n                });\n            }, this.window);\n        });\n    }\n    exec() {\n        // clear the callback as we are executing it\n        this.callback = undefined;\n        // sending out requests that is not executing\n        const reqs = Array.from(this.requests).filter((id) => !this.executingRequests.has(id));\n        // clean up the requests so the next callback can add\n        this.requests = new Set();\n        const promise = this.store.fetchByIds(reqs);\n        // adding the sending out requests into the executing queue\n        for (const req of reqs)\n            this.executingRequests.set(req, promise);\n        return promise.then((result) => {\n            // clean up the executing requests\n            for (const req of reqs)\n                this.executingRequests.delete(req);\n            return result;\n        });\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport axios from \"axios\";\nimport { action, makeObservable, observable, override, runInAction, } from \"mobx\";\nimport { RStore } from \"./RStore\";\n/**\n * A CRUD store use Map to store records\n */\nexport class CRUDStore extends RStore {\n    /**\n     * Constructor\n     *\n     * @param remoteURL RESTful endpoint for this store\n     * @param field2name mapping from Record's field to the corresponding field name in the RESTful API\n     * @param refetch whether to refetch the entity if it is already in the store\n     */\n    constructor(remoteURL, field2name, refetch, indices) {\n        super(remoteURL, field2name, refetch, indices);\n        this.createDrafts = new Map();\n        this.updateDrafts = new Map();\n        this.createAJAXParams = { URL: undefined, config: {} };\n        this.onDeleteListeners = [];\n        makeObservable(this, {\n            createDrafts: observable,\n            updateDrafts: observable,\n            create: action,\n            update: action,\n            delete: action,\n            truncate: action,\n            setCreateDraft: action,\n            deleteCreateDraft: action,\n            setUpdateDraft: action,\n            deleteUpdateDraft: action,\n        });\n    }\n    /**\n     * Add listeners when a record is deleted. Note that the event is only fired\n     * if the record is not null (actually exist).\n     *\n     * @param listener\n     */\n    addOnDeleteListener(listener) {\n        this.onDeleteListeners.push(listener);\n    }\n    /**\n     * Create the record, will sync with remote server.\n     */\n    create(draft, discardDraft = true) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                this.state.value = \"updating\";\n                let resp = yield axios.post(this.createAJAXParams.URL || this.remoteURL, this.serializeCreateDraft(draft), this.createAJAXParams.config);\n                return runInAction(() => {\n                    let record = this.deserialize(resp.data);\n                    this.records.set(record.id, record);\n                    this.index(record);\n                    if (discardDraft) {\n                        this.createDrafts.delete(draft.draftID);\n                    }\n                    this.state.value = \"updated\";\n                    return this.records.get(record.id);\n                });\n            }\n            catch (error) {\n                runInAction(() => {\n                    this.state.value = \"error\";\n                });\n                throw error;\n            }\n        });\n    }\n    /**\n     * Update the record, with sync with remote server\n     */\n    update(draft, discardDraft = true) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                this.state.value = \"updating\";\n                let resp = yield axios.put(`${this.remoteURL}/${draft.id}`, this.serializeUpdateDraft(draft));\n                return runInAction(() => {\n                    let record = draft.toModel() || this.deserialize(resp.data);\n                    draft.markSaved();\n                    // deindex the record if it's in the store\n                    const prevRecord = this.records.get(draft.id);\n                    if (prevRecord !== undefined && prevRecord !== null) {\n                        this.deindex(prevRecord);\n                    }\n                    this.records.set(record.id, record);\n                    this.index(record);\n                    if (discardDraft && this.updateDrafts.has(draft.id)) {\n                        this.updateDrafts.delete(draft.id);\n                    }\n                    this.state.value = \"updated\";\n                    return this.records.get(record.id);\n                });\n            }\n            catch (error) {\n                runInAction(() => {\n                    this.state.value = \"error\";\n                });\n                throw error;\n            }\n        });\n    }\n    /**\n     * Remove a record, will sync with remote server\n     */\n    delete(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const record = this.records.get(id);\n            if (record === undefined)\n                return;\n            try {\n                this.state.value = \"updating\";\n                this.records.delete(id);\n                if (record !== null) {\n                    this.deindex(record);\n                    for (let listener of this.onDeleteListeners) {\n                        listener(record);\n                    }\n                    // important to do async after all updates otherwise, reaction is going to throw\n                    // while store is updating\n                    yield axios.delete(`${this.remoteURL}/${id}`);\n                }\n                runInAction(() => {\n                    this.state.value = \"updated\";\n                });\n            }\n            catch (error) {\n                runInAction(() => {\n                    this.state.value = \"error\";\n                });\n                throw error;\n            }\n        });\n    }\n    /**\n     * Remove all records, will sync with the remote server\n     */\n    truncate() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                this.state.value = \"updating\";\n                yield axios.delete(`${this.remoteURL}`);\n                runInAction(() => {\n                    for (const record of this.records.values()) {\n                        if (record !== null) {\n                            this.deindex(record);\n                            for (let listener of this.onDeleteListeners) {\n                                listener(record);\n                            }\n                        }\n                    }\n                    this.records.clear();\n                    this.state.value = \"updated\";\n                });\n            }\n            catch (error) {\n                runInAction(() => {\n                    this.state.value = \"error\";\n                });\n                throw error;\n            }\n        });\n    }\n    /**\n     * Get a create draft from the store. Return undefined if does not exist\n     */\n    getCreateDraft(draftID) {\n        return this.createDrafts.get(draftID);\n    }\n    setCreateDraft(draft) {\n        this.createDrafts.set(draft.draftID, draft);\n    }\n    deleteCreateDraft(draftID) {\n        this.createDrafts.delete(draftID);\n    }\n    getUpdateDraft(id) {\n        return this.updateDrafts.get(id);\n    }\n    setUpdateDraft(draft) {\n        this.updateDrafts.set(draft.id, draft);\n    }\n    deleteUpdateDraft(id) {\n        this.updateDrafts.delete(id);\n    }\n    /**\n     * Remove a record (by id) from your indexes\n     */\n    deindex(record) {\n        for (const index of this.indices) {\n            index.remove(record);\n        }\n    }\n    /**\n     * Serialize the update to send to the server\n     */\n    serializeUpdateDraft(record) {\n        return this.serializeRecord(record);\n    }\n    /**\n     * Serialize the create object to send to the server\n     */\n    serializeCreateDraft(record) {\n        return this.serializeRecord(record);\n    }\n    /**\n     * Serialize the record for sending to the server, fields are renamed\n     * if a mapping is provided (this.field2name).\n     */\n    serializeRecord(record) {\n        const val = {};\n        for (const [k, v] of Object.entries(record)) {\n            if (this.field2name.hasOwnProperty(k)) {\n                val[this.field2name[k]] = v;\n            }\n            else {\n                val[k] = v;\n            }\n        }\n        return val;\n    }\n}\nexport class SimpleCRUDStore extends CRUDStore {\n    constructor(remoteURL, field2name, refetch, indices) {\n        super(remoteURL, field2name, refetch, indices);\n        makeObservable(this, {\n            create: override,\n            update: override,\n        });\n    }\n    create(draft) {\n        const _super = Object.create(null, {\n            create: { get: () => super.create }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            return _super.create.call(this, Object.assign({ draftID: \"\" }, draft), true);\n        });\n    }\n    update(draft) {\n        const _super = Object.create(null, {\n            update: { get: () => super.update }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            return _super.update.call(this, Object.assign({\n                markSaved: () => { },\n                toModel: () => undefined,\n            }, draft), true);\n        });\n    }\n}\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { makeStyles } from \"@mui/styles\";\nconst useStyles = makeStyles({\n    container: {\n        paddingTop: 12,\n        paddingBottom: 4,\n        textAlign: \"center\",\n    },\n    spin: {\n        animation: \"loadingCircle 1s infinite linear\",\n        \"-webkit-animation\": \"loadingCircle 1s infinite linear\",\n        display: \"inline-block\",\n        fontSize: 24,\n        color: \"#1890ff\",\n        lineHeight: 0,\n        verticalAlign: \"-0.125em\",\n        width: \"1em\",\n        height: \"1em\",\n        \"-webkit-font-smoothing\": \"antialiased\",\n        textTransform: \"none\",\n    },\n    text: {\n        lineHeight: 1.5715,\n        paddingTop: 5,\n        textShadow: \"0 1px 2px #fff\",\n        color: \"#1890ff\",\n    },\n});\nconst LoadingComponent = () => {\n    const classes = useStyles();\n    return (_jsxs(\"div\", Object.assign({ className: classes.container }, { children: [_jsx(\"span\", Object.assign({ className: classes.spin }, { children: _jsx(\"svg\", Object.assign({ viewBox: \"0 0 1024 1024\", focusable: \"false\", \"data-icon\": \"loading\", width: \"1em\", height: \"1em\", fill: \"currentColor\", \"aria-hidden\": \"true\" }, { children: _jsx(\"path\", { d: \"M988 548c-19.9 0-36-16.1-36-36 0-59.4-11.6-117-34.6-171.3a440.45 440.45 0 00-94.3-139.9 437.71 437.71 0 00-139.9-94.3C629 83.6 571.4 72 512 72c-19.9 0-36-16.1-36-36s16.1-36 36-36c69.1 0 136.2 13.5 199.3 40.3C772.3 66 827 103 874 150c47 47 83.9 101.8 109.7 162.7 26.7 63.1 40.2 130.2 40.2 199.3.1 19.9-16 36-35.9 36z\" }, void 0) }), void 0) }), void 0), _jsx(\"div\", Object.assign({ className: classes.text }, { children: \"Loading...\" }), void 0)] }), void 0));\n};\nexport default LoadingComponent;\n","export const THEME = \"light\";\nexport const PLATFORM = process.env.REACT_APP_PLATFORM === \"native\" ? \"native\" : \"web\";\n// url of the API server\nexport const SERVER = process.env.REACT_APP_PLATFORM === \"native\"\n    ? process.env.REACT_APP_API_SERVER\n    : \"\";\n// path to the static directory for serving either local or remote css/js/assets\nexport const PUBLIC_URL = process.env.PUBLIC_URL;\n","import { PLATFORM } from \"../env\";\nimport { createBrowserHistory, createMemoryHistory } from \"history\";\nimport { matchPath, useLocation } from \"react-router\";\nimport { useMemo } from \"react\";\nexport const history = PLATFORM === \"native\" ? createMemoryHistory() : createBrowserHistory();\nexport class PathDef {\n    constructor({ urlSchema = {}, querySchema = {}, component, pathDef, exact = false, strict = false, }) {\n        this.urlSchema = urlSchema;\n        this.querySchema = querySchema;\n        this.pathDef = pathDef;\n        this.exact = exact;\n        this.strict = strict;\n        this.routeDef = { path: pathDef, exact, strict, component };\n        this.component = component;\n    }\n    /**\n     * Create a path based on the given arguments.\n     *\n     * Note: this function should be used only when we build a link for <a> element\n     * since it won't follow the semantic of react-router but more like when you open a link\n     * at the first time in the browser (that's why for hash history, we have to add `#`)\n     */\n    getURL(urlArgs, queryArgs) {\n        let path = this.pathDef;\n        if (urlArgs !== null) {\n            for (let v in urlArgs) {\n                path = path.replace(`:${v}`, urlArgs[v]);\n            }\n        }\n        const query = new URLSearchParams(queryArgs).toString();\n        if (query.length > 0) {\n            path = `${path}?${query}`;\n        }\n        return path;\n    }\n    /**\n     * Create a location that the history object can be pushed\n     */\n    location(urlArgs, queryArgs) {\n        let path = this.pathDef;\n        for (let v in urlArgs) {\n            path = path.replace(`:${v}`, urlArgs[v]);\n        }\n        let query = new URLSearchParams(queryArgs).toString();\n        query = query.length > 0 ? `?${query}` : query;\n        return {\n            pathname: path,\n            search: query,\n            hash: \"\",\n            state: undefined,\n        };\n    }\n    /**\n     * Build a path that can be used to navigate to a link\n     */\n    path(urlArgs, queryArgs) {\n        return new Path(this, urlArgs, queryArgs);\n    }\n    /** React hook to get URL parameters */\n    useURLParams() {\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const location = useLocation();\n        // eslint-disable-next-line react-hooks/rules-of-hooks, react-hooks/exhaustive-deps\n        return useMemo(() => this.getURLArgs(location), [location.pathname]);\n    }\n    /** React hook to get query parameters */\n    useQueryParams() {\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const location = useLocation();\n        // eslint-disable-next-line react-hooks/rules-of-hooks, react-hooks/exhaustive-deps\n        return useMemo(() => this.getQueryArgs(location), [location.search]);\n    }\n    /** React hook to get parameters */\n    useParams() {\n        return { url: this.useURLParams(), query: this.useQueryParams() };\n    }\n    /**\n     * Get URL params of this route.\n     * @returns null if the route doesn't match or any parameter fails to pass the runtime type check\n     */\n    getURLArgs(location) {\n        const m = matchPath(location.pathname, this.routeDef);\n        if (m === null) {\n            return null;\n        }\n        return this.parse(m.params, this.urlSchema);\n    }\n    /**\n     * Get query params of this route\n     * @returns null if the route doesn't match or any parameter fails to pass the runtime type check\n     */\n    getQueryArgs(location) {\n        const params = new URLSearchParams(location.search);\n        const query = this.parse(Object.fromEntries(params.entries()), this.querySchema);\n        if (query !== null && Object.values(query).every((x) => x === undefined)) {\n            return null;\n        }\n        return query;\n    }\n    /**\n     * Parse the object with the schema\n     *\n     * @param object\n     * @param schema\n     * @returns\n     */\n    parse(object, schema) {\n        const output = {};\n        for (const [prop, propType] of Object.entries(schema)) {\n            const value = object[prop];\n            switch (propType) {\n                case \"number\":\n                    if (value === undefined) {\n                        return null;\n                    }\n                    output[prop] = parseFloat(value);\n                    if (!Number.isFinite(output[prop])) {\n                        return null;\n                    }\n                    break;\n                case \"boolean\":\n                    if (value === undefined || value !== \"true\" || value !== \"false\") {\n                        return null;\n                    }\n                    output[prop] = value === \"true\";\n                    break;\n                case \"string\":\n                    if (value === undefined) {\n                        return null;\n                    }\n                    output[prop] = value;\n                    break;\n                case \"optionalnumber\":\n                    if (value === undefined) {\n                        continue;\n                    }\n                    output[prop] = parseFloat(value);\n                    if (!Number.isFinite(output[prop])) {\n                        return null;\n                    }\n                    break;\n                case \"optionalboolean\":\n                    if (value === undefined) {\n                        continue;\n                    }\n                    if (value !== \"true\" || value !== \"false\") {\n                        return null;\n                    }\n                    output[prop] = value === \"true\";\n                    break;\n                case \"optionalstring\":\n                    if (value === undefined) {\n                        continue;\n                    }\n                    output[prop] = value;\n                    break;\n            }\n        }\n        return output;\n    }\n}\n/**\n * Overwrite the PathDef class to provide a better using experience\n */\nexport class NoArgsPathDef extends PathDef {\n    getURL() {\n        return super.getURL({}, {});\n    }\n    location() {\n        return super.location({}, {});\n    }\n    path() {\n        return super.path({}, {});\n    }\n}\n/**\n * Overwrite the PathDef class to provide a better using experience\n */\nexport class NoQueryArgsPathDef extends PathDef {\n    getURL(urlArgs) {\n        return super.getURL(urlArgs, {});\n    }\n    location(urlArgs) {\n        return super.location(urlArgs, {});\n    }\n    path(urlArgs) {\n        return super.path(urlArgs, {});\n    }\n}\nexport class NoURLArgsPathDef extends PathDef {\n    getURL(queryArgs) {\n        return super.getURL({}, queryArgs);\n    }\n    location(queryArgs) {\n        return super.location({}, queryArgs);\n    }\n    path(queryArgs) {\n        return super.path({}, queryArgs);\n    }\n}\nexport class OptionalQueryArgsPathDef extends PathDef {\n    getURL(urlArgs, queryArgs) {\n        return super.getURL(urlArgs, queryArgs || {});\n    }\n    location(urlArgs, queryArgs) {\n        return super.location(urlArgs, queryArgs || {});\n    }\n    path(urlArgs, queryArgs) {\n        return super.path(urlArgs, queryArgs || {});\n    }\n}\nclass Path {\n    constructor(pathDef, urlArgs, queryArgs) {\n        /**\n         * Handler for a mouse event navigation (e.g., linking on an <a> element)\n         */\n        this.mouseClickNavigationHandler = (e, openInNewPage) => {\n            if (e !== undefined) {\n                e.preventDefault();\n            }\n            if (openInNewPage || (e !== undefined && (e.ctrlKey || e.metaKey))) {\n                // holding ctrl or cmd key, we should open in new windows\n                window.open(this.pathDef.getURL(this.urlArgs, this.queryArgs), \"_blank\");\n                // keep the focus on this page\n                window.focus();\n            }\n            else {\n                history.push(this.pathDef.location(this.urlArgs, this.queryArgs));\n            }\n        };\n        this.pathDef = pathDef;\n        this.urlArgs = urlArgs;\n        this.queryArgs = queryArgs;\n    }\n    /**\n     * Open this path\n     */\n    open() {\n        history.push(this.pathDef.location(this.urlArgs, this.queryArgs));\n    }\n}\n/**\n * Export routing functions to global navigation behaviour on different platforms\n */\nexport const routeAPIs = {\n    internalHTMLLinkClickFnId: \"window._routeAPIs.internalHTMLLinkClick\",\n    history: history,\n    internalHTMLLinkClick: (e) => {\n        e.preventDefault();\n        let href = e.target.getAttribute(\"href\");\n        if (e.ctrlKey || e.metaKey) {\n            // holding ctrl or cmd key, we should open in new windows, even in native, because it is internal, another window still work\n            window.open(href, \"_blank\");\n            window.focus();\n        }\n        else {\n            history.push(href);\n        }\n    },\n    goBack: () => history.goBack(),\n    goForward: () => history.goForward(),\n    openInternalLink: (href) => {\n        history.push(href);\n    },\n};\nwindow._routeAPIs = routeAPIs;\n","import { matchPath } from \"react-router\";\nexport { ExternalLink, InternalHTMLLink, InternalLink } from \"./Link\";\nexport { history, PathDef, routeAPIs, NoArgsPathDef, NoQueryArgsPathDef, OptionalQueryArgsPathDef, } from \"./route\";\n/**\n * Find the route that matches with the current location\n */\nexport function getActiveRouteName(location, routes) {\n    for (let [name, route] of Object.entries(routes)) {\n        if (matchPath(location.pathname, route.routeDef) !== null) {\n            return name;\n        }\n    }\n}\n/**\n * Update the component of specific routes -- often for applying layout to the component (add headers/footers)\n *\n * @param routes\n * @param applyFn: mapping from route a function that apply the layout to the component\n * @param ignoredRoutes\n */\nexport function applyLayout(routes, applyFn, ignoredRoutes) {\n    if (ignoredRoutes === undefined) {\n        ignoredRoutes = new Set();\n    }\n    if (Array.isArray(ignoredRoutes)) {\n        ignoredRoutes = new Set(ignoredRoutes);\n    }\n    else if (!(ignoredRoutes instanceof Set)) {\n        ignoredRoutes = new Set(Object.keys(ignoredRoutes));\n    }\n    if (typeof applyFn === \"function\") {\n        for (let [name, route] of Object.entries(routes)) {\n            if (ignoredRoutes.has(name))\n                continue;\n            route.routeDef.component = applyFn(route.component, routes);\n        }\n    }\n    else {\n        for (let [name, route] of Object.entries(routes)) {\n            if (ignoredRoutes.has(name) || applyFn[name] === undefined)\n                continue;\n            route.routeDef.component = applyFn[name](route.component, routes);\n        }\n    }\n}\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { makeStyles } from \"@mui/styles\";\nimport { routeAPIs } from \"../routing\";\nimport { NoArgsPathDef } from \"../routing/route\";\nconst useStyles = makeStyles({\n    container: {\n        fontFamily: \"-apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Arial, Noto Sans, sans-serif, apple color emoji, segoe ui emoji, Segoe UI Symbol, noto color emoji\",\n        fontSize: 14,\n        textAlign: \"center\",\n    },\n    title: {\n        lineHeight: 1.8,\n        fontSize: 24,\n    },\n    subTitle: {\n        lineHeight: 1.6,\n        color: \"#00000073\",\n    },\n    navigation: {\n        marginTop: 24,\n        \"& button:not(:first-child)\": {\n            marginLeft: 8,\n        },\n    },\n    btn: {\n        color: \"#fff\",\n        borderColor: \"#1890ff\",\n        background: \"#1890ff\",\n        textShadow: \"0 -1px 0 rgb(0 0 0 / 12%)\",\n        boxShadow: \"0 2px #0000000b\",\n        lineHeight: 1.5715,\n        display: \"inline-block\",\n        fontWeight: 400,\n        border: \"1px solid transparent\",\n        transition: \"all .3s cubic-bezier(.645,.045,.355,1)\",\n        userSelect: \"none\",\n        touchAction: \"manipulation\",\n        height: 32,\n        padding: \"4px 15px\",\n        borderRadius: 2,\n        cursor: \"pointer\",\n    },\n});\nconst onClickGoHome = new NoArgsPathDef({\n    component: () => null,\n    pathDef: \"/\",\n}).path().mouseClickNavigationHandler;\nconst NotFoundComponent = () => {\n    const classes = useStyles();\n    return (_jsxs(\"div\", Object.assign({ className: classes.container }, { children: [_jsx(\"div\", Object.assign({ className: classes.title }, { children: \"404\" }), void 0), _jsx(\"div\", Object.assign({ className: classes.subTitle }, { children: \"Sorry, the page you visited does not exist.\" }), void 0), _jsxs(\"div\", Object.assign({ className: classes.navigation }, { children: [_jsx(\"button\", Object.assign({ className: classes.btn, onClick: routeAPIs.goBack }, { children: \"Back\" }), void 0), _jsx(\"button\", Object.assign({ className: classes.btn, onClick: onClickGoHome }, { children: \"Home\" }), void 0)] }), void 0)] }), void 0));\n};\nexport default NotFoundComponent;\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Router, Switch, Route } from \"react-router-dom\";\nimport { NotFoundComponent } from \"./components\";\nimport { history } from \"./routing\";\nexport default function App({ routes, }) {\n    return (_jsx(Router, Object.assign({ history: history }, { children: _jsx(\"div\", Object.assign({ className: \"app-body\" }, { children: _jsxs(Switch, { children: [Object.entries(routes).map(([key, route]) => (_jsx(Route, Object.assign({}, route.routeDef), key))), _jsx(Route, { component: NotFoundComponent }, void 0)] }, void 0) }), void 0) }), void 0));\n}\n","import React from \"react\";\nimport { TodoListStore } from \"./TodoListStore\";\n\nexport const stores = {\n  todolistStore: new TodoListStore(),\n};\nexport type IStore = Readonly<typeof stores>;\nexport const StoreContext = React.createContext<IStore>(stores);\n\nexport function useStores(): IStore {\n  return React.useContext(StoreContext);\n}\n\nexport { TodoListStore as VariableStore };\nexport type { Todo } from \"./TodoListStore\";\n","import { Record, SimpleCRUDStore } from \"gena-app\";\n\nexport interface Todo extends Record<number> {\n  id: number;\n  checked: boolean;\n  todo: string;\n}\n\nexport class TodoListStore extends SimpleCRUDStore<number, Todo> {\n  constructor() {\n    super(`/api/todo_list`);\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { Button, Checkbox, List, Space, Typography } from \"antd\";\nimport { observer } from \"mobx-react\";\nimport { useEffect } from \"react\";\nimport { useStores } from \"../models\";\n\nexport const HomePage = observer(() => {\n  const { todolistStore } = useStores();\n  useEffect(() => {\n    todolistStore.fetch({ limit: 1000, offset: 0 });\n  }, [todolistStore]);\n\n  const items = todolistStore.list.map((item) => {\n    return (\n      <List.Item key={item.id}>\n        <Checkbox\n          checked={item.checked}\n          onChange={(e) => {\n            item.checked = e.target.checked;\n            todolistStore.update(item);\n          }}\n        >\n          <Typography.Paragraph\n            style={{ marginBottom: 0 }}\n            editable={{\n              onChange: (text) => {\n                item.todo = text;\n                todolistStore.update(item);\n              },\n            }}\n          >\n            {item.todo}\n          </Typography.Paragraph>\n        </Checkbox>\n        <Button\n          type=\"primary\"\n          danger={true}\n          onClick={() => {\n            todolistStore.delete(item.id);\n          }}\n        >\n          Delete\n        </Button>\n      </List.Item>\n    );\n  });\n\n  const addItem = () => todolistStore.create({ checked: false, todo: \"\" });\n\n  return (\n    <Space direction=\"vertical\" style={{ width: \"100%\" }}>\n      <List bordered={true}>{items}</List>\n      <Button type=\"primary\" onClick={addItem}>\n        Add\n      </Button>\n    </Space>\n  );\n});\n","import { Menu } from \"antd\";\nimport { makeStyles } from \"@mui/styles\";\nimport { useLocation } from \"react-router-dom\";\nimport { getActiveRouteName, PathDef } from \"gena-app\";\nimport React from \"react\";\n\nconst useStyles = makeStyles({\n  centerNavBar: {\n    justifyContent: \"center\",\n    boxShadow: \"0 2px 8px #f0f1f2\",\n  },\n  leftNavBar: {\n    \"& .logo::after\": {\n      borderBottom: \"none !important\",\n      transition: \"none !important\",\n    },\n    \"& .logo:hover::after\": {\n      borderBottom: \"none !important\",\n      transition: \"none !important\",\n    },\n    \"& .logo img\": {\n      height: 24,\n      borderRadius: 4,\n      marginTop: -2,\n    },\n    paddingLeft: 24,\n    paddingRight: 24,\n    boxShadow: \"0 2px 8px #f0f1f2\",\n  },\n});\n\ntype MenuItemProps = {\n  children: string | JSX.Element;\n  icon?: JSX.Element;\n  danger?: boolean;\n  disabled?: boolean;\n};\n\ninterface Props<R> {\n  menus: Partial<Record<keyof R, string | JSX.Element | MenuItemProps>>;\n  routes: R;\n  className?: string;\n  style?: React.CSSProperties;\n  isFirstItemLogo?: boolean;\n}\n\nexport const CenterNavBar = <R extends Record<any, PathDef<any, any>>>({\n  menus,\n  routes,\n  className,\n  style,\n  isFirstItemLogo,\n}: Props<R>) => {\n  const classes = useStyles();\n  const location = useLocation();\n  const openMenu = (e: { key: keyof R }) => {\n    routes[e.key].path({}, {}).open();\n  };\n\n  const items = Object.keys(menus).map((routeName, index) => {\n    const className = isFirstItemLogo === true && index === 0 ? \"logo\" : \"\";\n    return getMenuItem(routeName, className, menus[routeName]!);\n  });\n  const activeRouteName = getActiveRouteName(location, routes);\n\n  return (\n    <Menu\n      mode=\"horizontal\"\n      className={\n        classes.centerNavBar + (className !== undefined ? \" \" + className : \"\")\n      }\n      style={style}\n      onClick={openMenu}\n      selectedKeys={\n        activeRouteName !== undefined ? [activeRouteName] : undefined\n      }\n    >\n      {items}\n    </Menu>\n  );\n};\n\nexport const LeftNavBar = <R extends Record<any, PathDef<any, any>>>({\n  menus,\n  routes,\n  className,\n  style,\n  isFirstItemLogo,\n}: Props<R>) => {\n  const classes = useStyles();\n  const location = useLocation();\n  const openMenu = (e: { key: keyof R }) => {\n    routes[e.key].path({}, {}).open();\n  };\n\n  const items = Object.keys(menus).map((routeName, index) => {\n    const className = isFirstItemLogo === true && index === 0 ? \"logo\" : \"\";\n    return getMenuItem(routeName, className, menus[routeName]!);\n  });\n  const activeRouteName = getActiveRouteName(location, routes);\n\n  return (\n    <Menu\n      mode=\"horizontal\"\n      className={\n        classes.leftNavBar + (className !== undefined ? \" \" + className : \"\")\n      }\n      style={style}\n      onClick={openMenu}\n      selectedKeys={\n        activeRouteName !== undefined ? [activeRouteName] : undefined\n      }\n    >\n      {items}\n    </Menu>\n  );\n};\n\nfunction getMenuItem(\n  key: string,\n  className: string,\n  props: string | JSX.Element | MenuItemProps\n) {\n  let children, realprops;\n\n  if (typeof props === \"string\") {\n    children = props;\n  } else if (React.isValidElement(props)) {\n    children = props;\n  } else {\n    const { children: children2, ...realprops2 } = props as MenuItemProps;\n    children = children2;\n    realprops = realprops2;\n  }\n\n  return (\n    <Menu.Item className={className} key={key} {...realprops}>\n      {children}\n    </Menu.Item>\n  );\n}\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { applyLayout, NoArgsPathDef } from \"gena-app\";\nimport { HomePage } from \"./pages/HomePage\";\nimport { CenterNavBar } from \"./components/NavBar\";\n\n/*************************************************************************************\n * Layouts of the application\n */\n\nexport const Layout = (\n  component: React.FunctionComponent<any> | React.ComponentClass<any, any>\n) => {\n  return (props: any) => {\n    const element = React.createElement(component, props);\n    return (\n      <Space direction=\"vertical\" style={{ width: \"100%\" }}>\n        <CenterNavBar menus={{ home: \"Home\" }} routes={routes} />\n        {element}\n      </Space>\n    );\n  };\n};\n\n/*************************************************************************************\n * Definitions for routes in this application:\n */\nexport const routes = {\n  home: new NoArgsPathDef({\n    component: HomePage,\n    pathDef: \"/\",\n    exact: true,\n  }),\n};\n\n// applying layout to all routes\napplyLayout(routes, Layout);\n","import ReactDOM from \"react-dom\";\nimport { App } from \"gena-app\";\nimport \"./index.css\";\nimport { StoreContext, stores } from \"./models\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { routes } from \"./routes\";\n\nReactDOM.render(\n  <StoreContext.Provider value={stores}>\n    <App routes={routes} />\n  </StoreContext.Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}