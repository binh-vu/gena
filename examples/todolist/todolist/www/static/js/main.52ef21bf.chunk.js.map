{"version":3,"sources":["../.yalc/rma-baseapp/lib/esm/models/RStore.js","../.yalc/rma-baseapp/lib/esm/models/CRUDStore.js","../.yalc/rma-baseapp/lib/esm/pages/LoadingPage.js","../.yalc/rma-baseapp/lib/esm/env.js","../.yalc/rma-baseapp/lib/esm/routing/route.js","../.yalc/rma-baseapp/lib/esm/routing/index.js","../.yalc/rma-baseapp/lib/esm/pages/NotFoundPage.js","../.yalc/rma-baseapp/lib/esm/components/Navbar.js","../.yalc/rma-baseapp/lib/esm/App.js","../.yalc/rma-baseapp/lib/esm/models/Record.js","models/index.ts","models/TodoListStore.ts","reportWebVitals.ts","routes.tsx","pages/HomePage.tsx","index.tsx"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","StoreState","this","_value","forbiddenStates","Set","makeObservable","observable","computed","v","has","RStore","remoteURL","field2name","refetch","indices","state","records","Map","ajaxErrorHandler","error","message","console","fetch","flow","query","record","set","id","index","f","queryByName","name","axios","get","params","q","resp","data","map","deserialize","total","nameAndField","length","Object","entries","key","name2field","fromEntries","undefined","action","fetchOne","fetchById","list","limit","runInAction","response","status","ids","sendoutIds","filter","output","post","values","items","item","offset","unique","fields","field","join","conditions","op_or_val","op","Array","isArray","sortedBy","sorted_by","order","groupBy","group_by","m","from","iter","fn","r","push","groupedFields","add","condition","btoa","JSON","stringify","encodedCondition","parse","atob","CRUDStore","createDrafts","updateDrafts","createAJAXParams","URL","config","onDeleteListeners","create","draft","discardDraft","serializeCreateDraft","delete","draftID","update","put","serializeUpdateDraft","toModel","markSaved","deindex","listener","truncate","setCreateDraft","deleteCreateDraft","setUpdateDraft","deleteUpdateDraft","clear","remove","SimpleCRUDStore","serializeRecord","val","k","hasOwnProperty","withStyles","root","paddingTop","paddingBottom","textAlign","bordered","border","borderRadius","classes","size","className","_jsx","assign","children","Spin","tip","PLATFORM","process","REACT_APP_PLATFORM","REACT_APP_API_SERVER","getUserConfirmation","callback","Modal","confirm","title","okText","okType","okButtonProps","danger","cancelText","onOk","onCancel","history","createMemoryHistory","createBrowserHistory","PathDef","urlSchema","querySchema","component","pathDef","exact","strict","routeDef","path","urlArgs","queryArgs","replace","URLSearchParams","toString","pathname","search","hash","Path","location","useLocation","useMemo","getURLArgs","getQueryArgs","url","useURLParams","useQueryParams","matchPath","every","x","object","schema","prop","propType","parseFloat","Number","isFinite","NoArgsPathDef","mouseClickNavigationHandler","preventDefault","ctrlKey","metaKey","window","open","getURL","focus","routeAPIs","internalHTMLLinkClickFnId","internalHTMLLinkClick","href","target","getAttribute","goBack","goForward","openInternalLink","_routeAPIs","getActiveRouteName","routes","route","onClickGoHome","NotFoundPage","Result","subTitle","extra","_jsxs","Space","Button","onClick","type","__rest","s","t","p","prototype","call","indexOf","getOwnPropertySymbols","i","propertyIsEnumerable","css","centerNavBar","justifyContent","boxShadow","leftNavBar","borderBottom","transition","height","marginTop","paddingLeft","paddingRight","CenterNavBar","menus","style","isFirstItemLogo","keys","routeName","getMenuItem","activeRouteName","Menu","mode","selectedKeys","props","realprops","React","isValidElement","_a","Item","App","enUSLocale","app","Router","Switch","Route","ConfigProvider","locale","enUSIntl","SimpleDraftCreateRecord","SimpleDraftUpdateRecord","stores","todolistStore","toggle","checked","StoreContext","createContext","useStores","useContext","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","HomePage","observer","useEffect","TodoItem","gutter","span","direction","width","todo","onChange","Paragraph","marginBottom","editable","tooltip","text","home","element","createElement","ReactDOM","render","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.52ef21bf.chunk.js","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport axios from \"axios\";\nimport { observable, flow, action, runInAction, computed, makeObservable, } from \"mobx\";\nimport { message } from \"antd\";\nexport class StoreState {\n    constructor() {\n        this._value = \"updated\";\n        this.forbiddenStates = new Set();\n        makeObservable(this, {\n            _value: observable,\n            value: computed,\n        });\n    }\n    get value() {\n        return this._value;\n    }\n    set value(v) {\n        if (this.forbiddenStates.has(v)) {\n            return;\n        }\n        this._value = v;\n    }\n}\nexport class RStore {\n    /**\n     * Constructor\n     *\n     * @param remoteURL RESTful endpoint for this store\n     * @param field2name mapping from Record's field to the corresponding field name in the RESTful API\n     * @param refetch whether to refetch the entity if it is already in the store\n     */\n    constructor(remoteURL, field2name, refetch, indices) {\n        this.state = new StoreState();\n        // null represent that entity does not exist on the server\n        this.records = new Map();\n        this.ajaxErrorHandler = (error) => {\n            message.error(\"Error while talking with the server. Check console for more details.\", 10);\n            console.error(error);\n        };\n        // whether to reload the entity if the store already has an entity\n        this.refetch = true;\n        this.indices = [];\n        /**\n         * Fetch mutliple records from remote server\n         */\n        this.fetch = flow(function* (query) {\n            try {\n                this.state.value = \"updating\";\n                const result = yield this.query(query);\n                for (const record of result.records) {\n                    this.records.set(record.id, record);\n                    this.index(record);\n                }\n                this.state.value = \"updated\";\n                return result;\n            }\n            catch (error) {\n                this.state.value = \"error\";\n                throw error;\n            }\n        });\n        /**\n         * Query records by name (not store the result)\n         */\n        this.queryByName = (name) => __awaiter(this, void 0, void 0, function* () {\n            let resp;\n            try {\n                resp = yield axios.get(`${this.remoteURL}`, {\n                    params: {\n                        q: name,\n                    },\n                });\n            }\n            catch (error) {\n                this.ajaxErrorHandler(error);\n                throw error;\n            }\n            return { records: resp.data.map(this.deserialize), total: resp.data.total };\n        });\n        /**\n         * Deserialize the data sent from the server to a record.\n         */\n        this.deserialize = (record) => {\n            if (this.nameAndField.length > 0) {\n                for (const [name, field] of this.nameAndField) {\n                    record[field] = record[name];\n                    delete record[name];\n                }\n            }\n            return record;\n        };\n        this.remoteURL = remoteURL;\n        this.field2name = field2name || {};\n        this.nameAndField = Object.entries(this.field2name).map(([key, value]) => [value, key]);\n        this.name2field = Object.fromEntries(this.nameAndField);\n        if (refetch !== undefined) {\n            this.refetch = refetch;\n        }\n        this.indices = indices || [];\n        makeObservable(this, {\n            state: observable,\n            records: observable,\n            fetch: action,\n            fetchOne: action,\n            fetchById: action,\n            set: action,\n            list: computed,\n        });\n    }\n    /**\n     * Get the number of records in the table\n     */\n    remoteSize() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.query({ limit: 1 })).total;\n        });\n    }\n    /** Fetch one record from the remote server */\n    fetchOne(query) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                this.state.value = \"updating\";\n                query.limit = 1;\n                const result = yield this.query(query);\n                if (result.records.length === 0) {\n                    // entity does not exist\n                    runInAction(() => {\n                        this.state.value = \"updated\";\n                    });\n                    return undefined;\n                }\n                let record = result.records[0];\n                return runInAction(() => {\n                    this.records.set(record.id, record);\n                    this.index(record);\n                    this.state.value = \"updated\";\n                    return record;\n                });\n            }\n            catch (error) {\n                if (error.response && error.response.status === 404) {\n                    // entity does not exist\n                    runInAction(() => {\n                        this.state.value = \"updated\";\n                    });\n                    return undefined;\n                }\n                runInAction(() => {\n                    this.state.value = \"error\";\n                });\n                this.ajaxErrorHandler(error);\n                throw error;\n            }\n        });\n    }\n    /**\n     * Fetch a record from remote server.\n     *\n     * Use async instead of flow as we may want to override the function and call super.\n     *\n     * @returns the record if it exists, undefined otherwise\n     */\n    fetchById(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.refetch && this.has(id)) {\n                const record = this.records.get(id);\n                if (record === null)\n                    return Promise.resolve(undefined);\n                return Promise.resolve(record);\n            }\n            try {\n                this.state.value = \"updating\";\n                let resp = yield axios.get(`${this.remoteURL}/${id}`);\n                return runInAction(() => {\n                    let record = this.deserialize(resp.data);\n                    this.records.set(record.id, record);\n                    this.index(record);\n                    this.state.value = \"updated\";\n                    return record;\n                });\n            }\n            catch (error) {\n                if (error.response && error.response.status === 404) {\n                    // entity does not exist\n                    runInAction(() => {\n                        this.records.set(id, null);\n                        this.state.value = \"updated\";\n                    });\n                    return undefined;\n                }\n                runInAction(() => {\n                    this.state.value = \"error\";\n                });\n                this.ajaxErrorHandler(error);\n                throw error;\n            }\n        });\n    }\n    /**\n     * Fetch multiple records from remote server by their IDs.\n     *\n     * Use async instead of flow as we may want to override the function and call super.\n     *\n     * @returns an object containing record that we found (the one we didn't found is undefined)\n     */\n    fetchByIds(ids) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let sendoutIds = ids;\n            if (!this.refetch) {\n                // no refetch, then we need to filter the list of ids\n                sendoutIds = sendoutIds.filter((id) => !this.has(id));\n                if (sendoutIds.length === 0) {\n                    const output = {};\n                    for (const id of ids) {\n                        const record = this.records.get(id);\n                        if (record !== null && record !== undefined) {\n                            output[id] = record;\n                        }\n                    }\n                    return Promise.resolve(output);\n                }\n            }\n            try {\n                this.state.value = \"updating\";\n                let resp = yield axios.post(`${this.remoteURL}/find_by_ids`, {\n                    ids: sendoutIds,\n                });\n                return runInAction(() => {\n                    for (const item of Object.values(resp.data.items)) {\n                        const record = this.deserialize(item);\n                        this.records.set(record.id, record);\n                        this.index(record);\n                    }\n                    const output = {};\n                    for (const id of ids) {\n                        const record = this.records.get(id);\n                        if (record === undefined) {\n                            this.records.set(id, null);\n                        }\n                        else if (record !== null) {\n                            output[id] = record;\n                        }\n                    }\n                    this.state.value = \"updated\";\n                    return output;\n                });\n            }\n            catch (error) {\n                runInAction(() => {\n                    this.state.value = \"error\";\n                });\n                this.ajaxErrorHandler(error);\n                throw error;\n            }\n        });\n    }\n    /** Query records (not store the result) */\n    query(query) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let params = {\n                limit: query.limit,\n                offset: query.offset,\n                unique: query.unique,\n            };\n            if (query.fields !== undefined) {\n                params.fields = query.fields\n                    .map((field) => this.field2name[field] || field)\n                    .join(\",\");\n            }\n            if (query.conditions !== undefined) {\n                for (let [field, op_or_val] of Object.entries(query.conditions)) {\n                    field = this.field2name[field] || field;\n                    if (typeof op_or_val === \"object\") {\n                        if (op_or_val.op === \"max\") {\n                            params[`${field}[${op_or_val.op}]`] = op_or_val.value.join(\",\");\n                        }\n                        else {\n                            params[`${field}[${op_or_val.op}]`] = Array.isArray(op_or_val.value)\n                                ? op_or_val.value.join(\",\")\n                                : op_or_val.value;\n                        }\n                    }\n                    else {\n                        params[`${field}`] = op_or_val;\n                    }\n                }\n            }\n            if (Array.isArray(query.sortedBy)) {\n                params.sorted_by = query.sortedBy\n                    .map((item) => {\n                    const field = this.field2name[item.field] || item.field;\n                    return item.order === \"asc\" ? field : `-${field}`;\n                })\n                    .join(\",\");\n            }\n            else if (typeof query.sortedBy === \"object\") {\n                const field = this.field2name[query.sortedBy.field] || query.sortedBy.field;\n                params.sorted_by = query.sortedBy.order === \"asc\" ? field : `-${field}`;\n            }\n            else {\n                params.sorted_by = this.field2name[query.sortedBy] || query.sortedBy;\n            }\n            if (query.groupBy !== undefined) {\n                params.group_by = query.groupBy\n                    .map((field) => this.field2name[field] || field)\n                    .join(\",\");\n            }\n            let resp;\n            try {\n                resp = yield axios.get(`${this.remoteURL}`, { params });\n            }\n            catch (error) {\n                this.ajaxErrorHandler(error);\n                throw error;\n            }\n            return {\n                records: resp.data.items.map(this.deserialize),\n                total: resp.data.total,\n            };\n        });\n    }\n    /**\n     * Test if we store a local copy of a record (INCLUDING NULL -- the record does not exist)\n     */\n    has(id) {\n        return this.records.has(id);\n    }\n    /**\n     * Get a local copy of a record\n     */\n    get(id) {\n        return this.records.get(id);\n    }\n    /**\n     * Save a record to the store\n     *\n     * @param m the record\n     */\n    set(m) {\n        this.records.set(m.id, m);\n    }\n    /**\n     * Iter through list of local copy of records in the store\n     */\n    *iter() {\n        for (const m of this.records.values()) {\n            if (m !== null) {\n                yield m;\n            }\n        }\n    }\n    /**\n     * Get a list of local copy of records in the store\n     */\n    get list() {\n        return Array.from(this.iter());\n    }\n    /**\n     * Filter records according to the filter function\n     */\n    filter(fn) {\n        let output = [];\n        for (const r of this.records.values()) {\n            if (r !== null && fn(r)) {\n                output.push(r);\n            }\n        }\n        return output;\n    }\n    /**\n     * Group records by values of some fields\n     */\n    groupBy(groupedFields, records) {\n        let output = {};\n        for (const r of records) {\n            const key = groupedFields.map((field) => r[field]).join(\"$\");\n            if (output[key] === undefined) {\n                output[key] = [r];\n            }\n            else {\n                output[key].push(r);\n            }\n        }\n        return Object.values(output);\n    }\n    /**\n     * Add a record to your indexes. Its implementation must be IDEMPOTENT\n     */\n    index(record) {\n        for (const index of this.indices) {\n            index.add(record);\n        }\n    }\n    /** Encode a query condition so its can be shared through URL */\n    encodeWhereQuery(condition) {\n        return btoa(JSON.stringify(condition));\n    }\n    /** Decode a query back to its original form */\n    decodeWhereQuery(encodedCondition) {\n        return JSON.parse(atob(encodedCondition));\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport axios from \"axios\";\nimport { observable, flow, makeObservable, runInAction, action } from \"mobx\";\nimport { RStore } from \"./RStore\";\n/**\n * A CRUD store use Map to store records\n */\nexport class CRUDStore extends RStore {\n    /**\n     * Constructor\n     *\n     * @param remoteURL RESTful endpoint for this store\n     * @param field2name mapping from Record's field to the corresponding field name in the RESTful API\n     * @param refetch whether to refetch the entity if it is already in the store\n     */\n    constructor(remoteURL, field2name, refetch, indices) {\n        super(remoteURL, field2name, refetch, indices);\n        this.createDrafts = new Map();\n        this.updateDrafts = new Map();\n        this.createAJAXParams = { URL: undefined, config: {} };\n        this.onDeleteListeners = [];\n        /**\n         * Create the record, will sync with remote server.\n         */\n        this.create = flow(function* (draft, discardDraft = true) {\n            try {\n                this.state.value = \"updating\";\n                let resp = yield axios.post(this.createAJAXParams.URL || this.remoteURL, this.serializeCreateDraft(draft), this.createAJAXParams.config);\n                let record = this.deserialize(resp.data);\n                this.records.set(record.id, record);\n                this.index(record);\n                if (discardDraft) {\n                    this.createDrafts.delete(draft.draftID);\n                }\n                this.state.value = \"updated\";\n                return record;\n            }\n            catch (error) {\n                this.state.value = \"error\";\n                this.ajaxErrorHandler(error);\n                throw error;\n            }\n        });\n        /**\n         * Update the record, with sync with remote server\n         */\n        this.update = flow(function* (draft, discardDraft = true) {\n            try {\n                this.state.value = \"updating\";\n                let resp = yield axios.put(`${this.remoteURL}/${draft.id}`, this.serializeUpdateDraft(draft));\n                let record = draft.toModel() || this.deserialize(resp.data);\n                draft.markSaved();\n                this.records.set(record.id, record);\n                this.index(record);\n                if (discardDraft && this.updateDrafts.has(draft.id)) {\n                    this.updateDrafts.delete(draft.id);\n                }\n                this.state.value = \"updated\";\n                return record;\n            }\n            catch (error) {\n                this.state.value = \"error\";\n                this.ajaxErrorHandler(error);\n                throw error;\n            }\n        });\n        /**\n         * Remove a record, will sync with remote server\n         */\n        this.delete = flow(function* (id) {\n            const record = this.records.get(id);\n            if (record === undefined)\n                return;\n            try {\n                this.state.value = \"updating\";\n                this.records.delete(id);\n                if (record !== null) {\n                    this.deindex(record);\n                    for (let listener of this.onDeleteListeners) {\n                        listener(record);\n                    }\n                    // important to do async after all updates otherwise, reaction is going to throw\n                    // while store is updating\n                    yield axios.delete(`${this.remoteURL}/${id}`);\n                }\n                this.state.value = \"updated\";\n            }\n            catch (error) {\n                this.state.value = \"error\";\n                this.ajaxErrorHandler(error);\n                throw error;\n            }\n        });\n        makeObservable(this, {\n            createDrafts: observable,\n            updateDrafts: observable,\n            create: action,\n            update: action,\n            delete: action,\n            truncate: action,\n            setCreateDraft: action,\n            deleteCreateDraft: action,\n            setUpdateDraft: action,\n            deleteUpdateDraft: action,\n        });\n    }\n    /**\n     * Add listeners when a record is deleted. Note that the event is only fired\n     * if the record is not null (actually exist).\n     *\n     * @param listener\n     */\n    addOnDeleteListener(listener) {\n        this.onDeleteListeners.push(listener);\n    }\n    /**\n     * Remove all records, will sync with the remote server\n     */\n    truncate() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                this.state.value = \"updating\";\n                yield axios.delete(`${this.remoteURL}`);\n                runInAction(() => {\n                    for (const record of this.records.values()) {\n                        if (record !== null) {\n                            this.deindex(record);\n                            for (let listener of this.onDeleteListeners) {\n                                listener(record);\n                            }\n                        }\n                    }\n                    this.records.clear();\n                    this.state.value = \"updated\";\n                });\n            }\n            catch (error) {\n                runInAction(() => {\n                    this.state.value = \"error\";\n                });\n                this.ajaxErrorHandler(error);\n                throw error;\n            }\n        });\n    }\n    /**\n     * Get a create draft from the store. Return undefined if does not exist\n     */\n    getCreateDraft(draftID) {\n        return this.createDrafts.get(draftID);\n    }\n    setCreateDraft(draft) {\n        this.createDrafts.set(draft.draftID, draft);\n    }\n    deleteCreateDraft(draftID) {\n        this.createDrafts.delete(draftID);\n    }\n    getUpdateDraft(id) {\n        return this.updateDrafts.get(id);\n    }\n    setUpdateDraft(draft) {\n        this.updateDrafts.set(draft.id, draft);\n    }\n    deleteUpdateDraft(id) {\n        this.updateDrafts.delete(id);\n    }\n    /**\n     * Remove a record (by id) from your indexes\n     */\n    deindex(record) {\n        for (const index of this.indices) {\n            index.remove(record);\n        }\n    }\n}\nexport class SimpleCRUDStore extends CRUDStore {\n    serializeUpdateDraft(record) {\n        return this.serializeRecord(record.record);\n    }\n    serializeCreateDraft(record) {\n        return this.serializeRecord(record.record);\n    }\n    serializeRecord(record) {\n        const val = {};\n        for (const [k, v] of Object.entries(record)) {\n            if (this.field2name.hasOwnProperty(k)) {\n                val[this.field2name[k]] = v;\n            }\n            else {\n                val[k] = v;\n            }\n        }\n        return val;\n    }\n}\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { withStyles } from \"@material-ui/styles\";\nimport { Spin } from \"antd\";\nconst styles = {\n    root: {\n        paddingTop: 12,\n        paddingBottom: 4,\n        textAlign: \"center\",\n    },\n    bordered: {\n        border: \"1px solid #ddd\",\n        borderRadius: 4,\n    },\n};\nconst LoadingComponent = ({ classes, size = \"default\", bordered = false, }) => {\n    let className = classes.root;\n    if (bordered) {\n        className += ` ${classes.bordered}`;\n    }\n    return (_jsx(\"div\", Object.assign({ className: className }, { children: _jsx(Spin, { tip: \"Loading...\", size: size }, void 0) }), void 0));\n};\nexport default withStyles(styles)(LoadingComponent);\n","export const THEME = \"light\";\nexport const PLATFORM = process.env.REACT_APP_PLATFORM === \"native\" ? \"native\" : \"web\";\n// url of the API server\nexport const SERVER = process.env.REACT_APP_PLATFORM === \"native\"\n    ? process.env.REACT_APP_API_SERVER\n    : \"\";\n// path to the static directory for serving either local or remote css/js/assets\nexport const PUBLIC_URL = process.env.PUBLIC_URL;\n","import { PLATFORM } from \"../env\";\nimport { createBrowserHistory, createMemoryHistory } from \"history\";\nimport { Modal } from \"antd\";\nimport { matchPath, useLocation } from \"react-router\";\nimport { useMemo } from \"react\";\nfunction getUserConfirmation(message, callback) {\n    Modal.confirm({\n        title: message,\n        okText: \"Leave\",\n        okType: \"primary\",\n        okButtonProps: { danger: true },\n        cancelText: \"Stay\",\n        onOk() {\n            callback(true);\n        },\n        onCancel() {\n            // reverse ok and cancel doesn't work since antd detect escape keyword as cancel.\n            callback(false);\n        },\n    });\n}\nexport const history = PLATFORM === \"native\"\n    ? createMemoryHistory({\n        getUserConfirmation,\n    })\n    : createBrowserHistory({\n        getUserConfirmation,\n    });\nexport class PathDef {\n    constructor({ urlSchema = {}, querySchema = {}, component, pathDef, exact = false, strict = false, }) {\n        this.urlSchema = urlSchema;\n        this.querySchema = querySchema;\n        this.pathDef = pathDef;\n        this.exact = exact;\n        this.strict = strict;\n        this.routeDef = { path: pathDef, exact, strict, component };\n        this.component = component;\n    }\n    /**\n     * Create a path based on the given arguments.\n     *\n     * Note: this function should be used only when we build a link for <a> element\n     * since it won't follow the semantic of react-router but more like when you open a link\n     * at the first time in the browser (that's why for hash history, we have to add `#`)\n     */\n    getURL(urlArgs, queryArgs) {\n        let path = this.pathDef;\n        if (urlArgs !== null) {\n            for (let v in urlArgs) {\n                path = path.replace(`:${v}`, urlArgs[v]);\n            }\n        }\n        const query = new URLSearchParams(queryArgs).toString();\n        if (query.length > 0) {\n            path = `${path}?${query}`;\n        }\n        return path;\n    }\n    /**\n     * Create a location that the history object can be pushed\n     */\n    location(urlArgs, queryArgs) {\n        let path = this.pathDef;\n        for (let v in urlArgs) {\n            path = path.replace(`:${v}`, urlArgs[v]);\n        }\n        let query = new URLSearchParams(queryArgs).toString();\n        query = query.length > 0 ? `?${query}` : query;\n        return {\n            pathname: path,\n            search: query,\n            hash: \"\",\n            state: undefined,\n        };\n    }\n    /**\n     * Build a path that can be used to navigate to a link\n     */\n    path(urlArgs, queryArgs) {\n        return new Path(this, urlArgs, queryArgs);\n    }\n    /** React hook to get URL parameters */\n    useURLParams() {\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const location = useLocation();\n        // eslint-disable-next-line react-hooks/rules-of-hooks, react-hooks/exhaustive-deps\n        return useMemo(() => this.getURLArgs(location), [location.pathname]);\n    }\n    /** React hook to get query parameters */\n    useQueryParams() {\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const location = useLocation();\n        // eslint-disable-next-line react-hooks/rules-of-hooks, react-hooks/exhaustive-deps\n        return useMemo(() => this.getQueryArgs(location), [location.search]);\n    }\n    /** React hook to get parameters */\n    useParams() {\n        return { url: this.useURLParams(), query: this.useQueryParams() };\n    }\n    /**\n     * Get URL params of this route.\n     * @returns null if the route doesn't match or any parameter fails to pass the runtime type check\n     */\n    getURLArgs(location) {\n        const m = matchPath(location.pathname, this.routeDef);\n        if (m === null) {\n            return null;\n        }\n        return this.parse(m.params, this.urlSchema);\n    }\n    /**\n     * Get query params of this route\n     * @returns null if the route doesn't match or any parameter fails to pass the runtime type check\n     */\n    getQueryArgs(location) {\n        const params = new URLSearchParams(location.search);\n        const query = this.parse(Object.fromEntries(params.entries()), this.querySchema);\n        if (query !== null && Object.values(query).every((x) => x === undefined)) {\n            return null;\n        }\n        return query;\n    }\n    /**\n     * Parse the object with the schema\n     *\n     * @param object\n     * @param schema\n     * @returns\n     */\n    parse(object, schema) {\n        const output = {};\n        for (const [prop, propType] of Object.entries(schema)) {\n            const value = object[prop];\n            switch (propType) {\n                case \"number\":\n                    if (value === undefined) {\n                        return null;\n                    }\n                    output[prop] = parseFloat(value);\n                    if (!Number.isFinite(output[prop])) {\n                        return null;\n                    }\n                    break;\n                case \"boolean\":\n                    if (value === undefined || value !== \"true\" || value !== \"false\") {\n                        return null;\n                    }\n                    output[prop] = value === \"true\";\n                    break;\n                case \"string\":\n                    if (value === undefined) {\n                        return null;\n                    }\n                    output[prop] = value;\n                    break;\n                case \"optionalnumber\":\n                    if (value === undefined) {\n                        continue;\n                    }\n                    output[prop] = parseFloat(value);\n                    if (!Number.isFinite(output[prop])) {\n                        return null;\n                    }\n                    break;\n                case \"optionalboolean\":\n                    if (value === undefined) {\n                        continue;\n                    }\n                    if (value !== \"true\" || value !== \"false\") {\n                        return null;\n                    }\n                    output[prop] = value === \"true\";\n                    break;\n                case \"optionalstring\":\n                    if (value === undefined) {\n                        continue;\n                    }\n                    output[prop] = value;\n                    break;\n            }\n        }\n        return output;\n    }\n}\n/**\n * Overwrite the PathDef class to provide a better using experience\n */\nexport class NoArgsPathDef extends PathDef {\n    getURL() {\n        return super.getURL({}, {});\n    }\n    location() {\n        return super.location({}, {});\n    }\n    path() {\n        return super.path({}, {});\n    }\n}\n/**\n * Overwrite the PathDef class to provide a better using experience\n */\nexport class NoQueryArgsPathDef extends PathDef {\n    getURL(urlArgs) {\n        return super.getURL(urlArgs, {});\n    }\n    location(urlArgs) {\n        return super.location(urlArgs, {});\n    }\n    path(urlArgs) {\n        return super.path(urlArgs, {});\n    }\n}\nexport class NoURLArgsPathDef extends PathDef {\n    getURL(queryArgs) {\n        return super.getURL({}, queryArgs);\n    }\n    location(queryArgs) {\n        return super.location({}, queryArgs);\n    }\n    path(queryArgs) {\n        return super.path({}, queryArgs);\n    }\n}\nexport class OptionalQueryArgsPathDef extends PathDef {\n    getURL(urlArgs, queryArgs) {\n        return super.getURL(urlArgs, queryArgs || {});\n    }\n    location(urlArgs, queryArgs) {\n        return super.location(urlArgs, queryArgs || {});\n    }\n    path(urlArgs, queryArgs) {\n        return super.path(urlArgs, queryArgs || {});\n    }\n}\nclass Path {\n    constructor(pathDef, urlArgs, queryArgs) {\n        /**\n         * Handler for a mouse event navigation (e.g., linking on an <a> element)\n         */\n        this.mouseClickNavigationHandler = (e) => {\n            if (e !== undefined) {\n                e.preventDefault();\n            }\n            if (e !== undefined && (e.ctrlKey || e.metaKey)) {\n                // holding ctrl or cmd key, we should open in new windows\n                window.open(this.pathDef.getURL(this.urlArgs, this.queryArgs), \"_blank\");\n                // keep the focus on this page\n                window.focus();\n            }\n            else {\n                history.push(this.pathDef.location(this.urlArgs, this.queryArgs));\n            }\n        };\n        this.pathDef = pathDef;\n        this.urlArgs = urlArgs;\n        this.queryArgs = queryArgs;\n    }\n    /**\n     * Open this path\n     */\n    open() {\n        history.push(this.pathDef.location(this.urlArgs, this.queryArgs));\n    }\n}\n/**\n * Export routing functions to global navigation behaviour on different platforms\n */\nexport const routeAPIs = {\n    internalHTMLLinkClickFnId: \"window._routeAPIs.internalHTMLLinkClick\",\n    history: history,\n    internalHTMLLinkClick: (e) => {\n        e.preventDefault();\n        let href = e.target.getAttribute(\"href\");\n        if (e.ctrlKey || e.metaKey) {\n            // holding ctrl or cmd key, we should open in new windows, even in native, because it is internal, another window still work\n            window.open(href, \"_blank\");\n            window.focus();\n        }\n        else {\n            history.push(href);\n        }\n    },\n    goBack: () => history.goBack(),\n    goForward: () => history.goForward(),\n    openInternalLink: (href) => {\n        history.push(href);\n    },\n};\nwindow._routeAPIs = routeAPIs;\n","import { matchPath } from \"react-router\";\nexport { ExternalLink, InternalHTMLLink, InternalLink, InternalLinkBtn, } from \"./Link\";\nexport { history, PathDef, routeAPIs, NoArgsPathDef, NoQueryArgsPathDef, OptionalQueryArgsPathDef, } from \"./route\";\n/**\n * Find the route that matches with the current location\n */\nexport function getActiveRouteName(location, routes) {\n    for (let [name, route] of Object.entries(routes)) {\n        if (matchPath(location.pathname, route.routeDef) !== null) {\n            return name;\n        }\n    }\n}\n/**\n * Update the component of specific routes -- often for applying layout to the component (add headers/footers)\n *\n * @param routes\n * @param applyFn: mapping from route a function that apply the layout to the component\n * @param ignoredRoutes\n */\nexport function applyLayout(routes, applyFn, ignoredRoutes) {\n    if (ignoredRoutes === undefined) {\n        ignoredRoutes = new Set();\n    }\n    if (Array.isArray(ignoredRoutes)) {\n        ignoredRoutes = new Set(ignoredRoutes);\n    }\n    else if (!(ignoredRoutes instanceof Set)) {\n        ignoredRoutes = new Set(Object.keys(ignoredRoutes));\n    }\n    if (typeof applyFn === \"function\") {\n        for (let [name, route] of Object.entries(routes)) {\n            if (ignoredRoutes.has(name))\n                continue;\n            route.routeDef.component = applyFn(route.component, routes);\n        }\n    }\n    else {\n        for (let [name, route] of Object.entries(routes)) {\n            if (ignoredRoutes.has(name) || applyFn[name] === undefined)\n                continue;\n            route.routeDef.component = applyFn[name](route.component, routes);\n        }\n    }\n}\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Result, Space, Button } from \"antd\";\nimport { routeAPIs } from \"../routing\";\nimport { NoArgsPathDef } from \"../routing/route\";\nconst onClickGoHome = new NoArgsPathDef({\n    component: () => null,\n    pathDef: \"/\",\n}).path().mouseClickNavigationHandler;\nconst NotFoundPage = () => {\n    return (_jsx(Result, { status: \"404\", title: \"404\", subTitle: \"Sorry, the page you visited does not exist.\", extra: _jsxs(Space, { children: [_jsx(Button, Object.assign({ onClick: routeAPIs.goBack }, { children: \"Back\" }), void 0), _jsx(Button, Object.assign({ type: \"primary\", onClick: onClickGoHome }, { children: \"Home\" }), void 0)] }, void 0) }, void 0));\n};\nexport default NotFoundPage;\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Menu } from \"antd\";\nimport { withStyles } from \"@material-ui/styles\";\nimport { useLocation } from \"react-router-dom\";\nimport { getActiveRouteName } from \"../routing\";\nimport React from \"react\";\nconst css = {\n    centerNavBar: {\n        justifyContent: \"center\",\n        boxShadow: \"0 2px 8px #f0f1f2\",\n    },\n    leftNavBar: {\n        \"& .logo::after\": {\n            borderBottom: \"none !important\",\n            transition: \"none !important\",\n        },\n        \"& .logo:hover::after\": {\n            borderBottom: \"none !important\",\n            transition: \"none !important\",\n        },\n        \"& .logo img\": {\n            height: 24,\n            borderRadius: 4,\n            marginTop: -2,\n        },\n        paddingLeft: 24,\n        paddingRight: 24,\n        boxShadow: \"0 2px 8px #f0f1f2\",\n    },\n};\nexport const CenterNavBar = withStyles(css)(({ classes, menus, routes, className, style, isFirstItemLogo, }) => {\n    const location = useLocation();\n    const openMenu = (e) => {\n        routes[e.key].path({}, {}).open();\n    };\n    const items = Object.keys(menus).map((routeName, index) => {\n        const className = isFirstItemLogo === true && index === 0 ? \"logo\" : \"\";\n        return getMenuItem(routeName, className, menus[routeName]);\n    });\n    const activeRouteName = getActiveRouteName(location, routes);\n    return (_jsx(Menu, Object.assign({ mode: \"horizontal\", className: classes.centerNavBar +\n            (className !== undefined ? \" \" + className : \"\"), style: style, onClick: openMenu, selectedKeys: activeRouteName !== undefined ? [activeRouteName] : undefined }, { children: items }), void 0));\n});\nexport const LeftNavBar = withStyles(css)(({ classes, menus, routes, className, style, isFirstItemLogo, }) => {\n    const location = useLocation();\n    const openMenu = (e) => {\n        routes[e.key].path({}, {}).open();\n    };\n    const items = Object.keys(menus).map((routeName, index) => {\n        const className = isFirstItemLogo === true && index === 0 ? \"logo\" : \"\";\n        return getMenuItem(routeName, className, menus[routeName]);\n    });\n    const activeRouteName = getActiveRouteName(location, routes);\n    return (_jsx(Menu, Object.assign({ mode: \"horizontal\", className: classes.leftNavBar + (className !== undefined ? \" \" + className : \"\"), style: style, onClick: openMenu, selectedKeys: activeRouteName !== undefined ? [activeRouteName] : undefined }, { children: items }), void 0));\n});\nfunction getMenuItem(key, className, props) {\n    let children, realprops;\n    if (typeof props === \"string\") {\n        children = props;\n    }\n    else if (React.isValidElement(props)) {\n        children = props;\n    }\n    else {\n        const _a = props, { children: children2 } = _a, realprops2 = __rest(_a, [\"children\"]);\n        children = children2;\n        realprops = realprops2;\n    }\n    return (_jsx(Menu.Item, Object.assign({ className: className }, realprops, { children: children }), key));\n}\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Router, Switch, Route } from \"react-router-dom\";\nimport NotFoundPage from \"./pages/NotFoundPage\";\nimport { history } from \"./routing\";\nimport enUSIntl from \"antd/lib/locale/en_US\";\nimport { ConfigProvider } from \"antd\";\nexport default function App({ enUSLocale, routes, }) {\n    const app = (_jsx(Router, Object.assign({ history: history }, { children: _jsx(\"div\", Object.assign({ className: \"app-body\" }, { children: _jsxs(Switch, { children: [Object.entries(routes).map(([key, route]) => (_jsx(Route, Object.assign({}, route.routeDef), key))), _jsx(Route, { component: NotFoundPage }, void 0)] }, void 0) }), void 0) }), void 0));\n    if (enUSLocale === true) {\n        return _jsx(ConfigProvider, Object.assign({ locale: enUSIntl }, { children: app }), void 0);\n    }\n    return app;\n}\n","/**\n * A simple implementation of DraftCreateRecord.\n */\nexport class SimpleDraftCreateRecord {\n    constructor(draftID, record) {\n        this.draftID = draftID;\n        this.record = record;\n    }\n}\n/**\n * Simple implementation of DraftUpdateRecord, it has no ability to tell if a record has been modified or not\n */\nexport class SimpleDraftUpdateRecord {\n    constructor(record) {\n        this.record = record;\n    }\n    get id() {\n        return this.record.id;\n    }\n    markSaved() { }\n    toModel() {\n        return this.record;\n    }\n}\n","import React from \"react\";\nimport { TodoListStore } from \"./TodoListStore\";\n\nexport const stores = {\n  todolistStore: new TodoListStore(),\n};\nexport type IStore = Readonly<typeof stores>;\nexport const StoreContext = React.createContext<IStore>(stores);\n\nexport function useStores(): IStore {\n  return React.useContext(StoreContext);\n}\n\nexport { TodoListStore as VariableStore };\nexport type { Todo } from \"./TodoListStore\";\n","import { action, makeObservable } from \"mobx\";\nimport { Record, SimpleCRUDStore } from \"rma-baseapp\";\nimport { SimpleDraftUpdateRecord } from \"rma-baseapp/lib/esm/models/Record\";\n\nexport interface Todo extends Record<number> {\n  id: number;\n  checked: boolean;\n  todo: string;\n}\n\nexport class TodoListStore extends SimpleCRUDStore<number, Todo> {\n  constructor() {\n    super(`/api/todo_list`);\n    makeObservable(this, {\n      toggle: action,\n    });\n  }\n\n  toggle(item: Todo) {\n    item.checked = !item.checked;\n    this.update(new SimpleDraftUpdateRecord(item));\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { NoArgsPathDef, NoQueryArgsPathDef } from \"rma-baseapp\";\nimport { HomePage } from \"./pages/HomePage\";\nimport React from \"react\";\nimport { CenterNavBar } from \"rma-baseapp\";\nimport { Space } from \"antd\";\n\nexport const Layout = (\n  component: React.FunctionComponent<any> | React.ComponentClass<any, any>\n) => {\n  return (props: any) => {\n    const element = React.createElement(component, props);\n    return (\n      <Space direction=\"vertical\" style={{ width: \"100%\" }}>\n        <CenterNavBar menus={{ home: \"Home\" }} routes={routes} />\n        {element}\n      </Space>\n    );\n  };\n};\n\n/*************************************************************************************\n * Definitions for routes in this application:\n */\nexport const routes = {\n  home: new NoArgsPathDef({\n    component: Layout(HomePage),\n    pathDef: \"/\",\n    exact: true,\n  }),\n};\n","import { Button, Checkbox, Col, List, Row, Space, Typography } from \"antd\";\nimport { observer } from \"mobx-react\";\nimport { useEffect } from \"react\";\nimport {\n  SimpleDraftCreateRecord,\n  SimpleDraftUpdateRecord,\n} from \"rma-baseapp/lib/esm/models/Record\";\nimport { Todo, useStores } from \"../models\";\n\nexport const HomePage = observer(() => {\n  const { todolistStore } = useStores();\n  useEffect(() => {\n    todolistStore.fetch({ limit: 1000, offset: 0 });\n  }, []);\n\n  const items = todolistStore.list.map((item) => <TodoItem item={item} />);\n\n  const addItem = () => {\n    todolistStore.create(\n      new SimpleDraftCreateRecord(\"\", {\n        id: 0,\n        checked: false,\n        todo: \"\",\n      })\n    );\n  };\n\n  return (\n    <Row gutter={16}>\n      <Col className=\"gutter-row\" span={8} offset={8}>\n        <Space direction=\"vertical\" style={{ width: \"100%\" }}>\n          <List bordered={true}>{items}</List>\n          <Button type=\"primary\" onClick={addItem}>\n            Add\n          </Button>\n        </Space>\n      </Col>\n    </Row>\n  );\n});\n\nconst TodoItem = observer(({ item }: { item: Todo }) => {\n  const { todolistStore } = useStores();\n  return (\n    <List.Item key={item.id}>\n      <Checkbox\n        checked={item.checked}\n        onChange={() => todolistStore.toggle(item)}\n      >\n        <Typography.Paragraph\n          style={{ marginBottom: 0 }}\n          editable={{\n            tooltip: \"click to edit text\",\n            onChange: (text) => {\n              item.todo = text;\n              todolistStore.update(new SimpleDraftUpdateRecord(item));\n            },\n          }}\n        >\n          {item.todo}\n        </Typography.Paragraph>\n      </Checkbox>\n      <Button\n        type=\"primary\"\n        danger={true}\n        onClick={() => {\n          todolistStore.delete(item.id);\n        }}\n      >\n        Delete\n      </Button>\n    </List.Item>\n  );\n});\n","import ReactDOM from \"react-dom\";\nimport { App } from \"rma-baseapp\";\nimport \"./index.css\";\nimport { StoreContext, stores } from \"./models\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { routes } from \"./routes\";\n\nReactDOM.render(\n  <StoreContext.Provider value={stores}>\n    <App enUSLocale={false} routes={routes} />\n  </StoreContext.Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}